{
  "openapi": "3.0.3",
  "info": {
    "title": "Bread API",
    "description": "The Bread provides comprehensive cryptocurrency wallet management capabilities including wallet creation, balance monitoring, and asset transfers.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://processor-prod.up.railway.app",
      "description": "Production server"
    }
  ],
  "paths": {
    "/wallet": {
      "post": {
        "tags": ["Wallet"],
        "summary": "Create wallet",
        "description": "This endpoint allows you to create new wallet.",
        "operationId": "createWallet",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWalletRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Wallet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateWalletResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Wallet"],
        "summary": "Get wallet",
        "description": "This endpoint allows you to retrieve a specific wallet by ID.",
        "operationId": "getWallet",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "wallet_id",
            "in": "query",
            "required": true,
            "description": "The wallet ID to fetch details for",
            "schema": {
              "type": "string",
              "example": "68bc290df51feea8c53f5275"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallet fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWalletResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transfer": {
      "post": {
        "tags": ["Wallet"],
        "summary": "Transfer",
        "description": "This endpoint allows you to transfer asset from a wallet.",
        "operationId": "transferAssets",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transfer initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          }
        }
      }
    },
    "/automate": {
      "post": {
        "tags": ["Wallet"],
        "summary": "Automate",
        "description": "This endpoint allows you to set automation for a wallet.",
        "operationId": "automateWallet",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutomateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Automation set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutomateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/swap": {
      "post": {
        "tags": ["Swap"],
        "summary": "Execute swap",
        "description": "This endpoint allows you to swap an asset to another.",
        "operationId": "swapAsset",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwapExecuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Swap executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwapExecuteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/quote/onramp": {
      "post": {
        "tags": ["Onramp"],
        "summary": "Get quote",
        "description": "This endpoint allows you to get quote for onramps.",
        "operationId": "getOnrampQuote",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnrampQuoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Onramp quote fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnrampQuoteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rate/onramp": {
      "get": {
        "tags": ["Onramp"],
        "summary": "Get rate",
        "description": "This endpoint allows you get onramp rate for a currency.",
        "operationId": "getOnrampRate",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "description": "The currency code to get the onramp rate for",
            "schema": {
              "type": "string",
              "enum": ["NGN"],
              "example": "NGN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Onramp rate fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnrampRateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": ["Wallet"],
        "summary": "Get wallets",
        "description": "This endpoint allows you to retrieve wallets.",
        "operationId": "listWallets",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This is the current page being requested relative to size of a page",
              "default": 1
            }
          },
          {
            "name": "wallet_id",
            "in": "query",
            "description": "The wallet ID of the exact wallet you want to fetche details for.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Wallets fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/identity": {
      "post": {
        "tags": ["Identity"],
        "summary": "Create identity",
        "description": "This endpoint allows you to create identity verification.",
        "operationId": "createIdentity",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIdentityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Identity created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateIdentityResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Identity"],
        "summary": "Get identity",
        "description": "This endpoint allows you to retrieve identity details.",
        "operationId": "getIdentity",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "identity_id",
            "in": "query",
            "required": true,
            "description": "The identity ID to fetch details for",
            "schema": {
              "type": "string",
              "example": "68bf2de7196a18d7bd165ffb"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Identity fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIdentityResponse"
                }
              }
            }
          }
        }
      }
    },
    "/beneficiary": {
      "post": {
        "tags": ["Beneficiary"],
        "summary": "Create beneficiary",
        "description": "This endpoint allows you to create a beneficiary.",
        "operationId": "createBeneficiary",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBeneficiaryRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Beneficiary created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBeneficiaryResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Beneficiary"],
        "summary": "Get beneficiary",
        "description": "This endpoint allows you to retrieve a specific beneficiary by ID.",
        "operationId": "getBeneficiary",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "beneficiary_id",
            "in": "query",
            "required": true,
            "description": "The beneficiary ID to fetch details for",
            "schema": {
              "type": "string",
              "example": "68bf2eba196a18d7bd166184"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Beneficiary fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBeneficiaryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/beneficiaries": {
      "get": {
        "tags": ["Beneficiary"],
        "summary": "Get beneficiaries",
        "description": "This endpoint allows you to retrieve beneficiaries.",
        "operationId": "listBeneficiaries",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This is the current page being requested relative to size of a page",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Beneficiaries fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBeneficiariesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/banks": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get banks",
        "description": "This endpoint allows you to retrieve supported banks.",
        "operationId": "getBanks",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "description": "Filter banks by currency code",
            "schema": {
              "type": "string",
              "enum": ["NGN"],
              "example": "ngn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Banks fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBanksResponse"
                }
              }
            }
          }
        }
      }
    },
    "/assets": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get assets",
        "description": "This endpoint allows you to retrieve supported cryptocurrency.",
        "operationId": "getAssets",
        "security": [{"ApiKeyAuth": []}],
        "responses": {
          "200": {
            "description": "Assets fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAssetsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "tags": ["Miscellaneous"],
        "summary": "Get notifications",
        "description": "This endpoint allows you to retrieve wallet notifications.",
        "operationId": "getNotifications",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "This is the current page being requested relative to size of a page",
              "default": 1
            }
          },
          {
            "name": "wallet_id",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "The wallet ID to get notifications for",
              "example": "68bc290df51feea8c53f5275"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNotificationsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "tags": ["Balance"],
        "summary": "Get balance",
        "description": "This endpoint allows you to retrieve the an asset's balance.",
        "operationId": "getBalance",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "asset",
            "in": "query",
            "required": true,
            "description": "The asset to get balance for",
            "schema": {
              "type": "string",
              "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
              "example": "solana:usdc"
            }
          },
          {
            "name": "wallet_id",
            "in": "query",
            "required": true,
            "description": "The wallet ID to get balance for",
            "schema": {
              "type": "string",
              "example": "68bc290df51feea8c53f5275"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balance fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/balances": {
      "get": {
        "tags": ["Balance"],
        "summary": "Get balances",
        "description": "This endpoint allows you to retrieve all balances for a wallet.",
        "operationId": "getBalances",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "wallet_id",
            "in": "query",
            "required": true,
            "description": "The wallet ID to get balances for",
            "schema": {
              "type": "string",
              "example": "68bc290df51feea8c53f5275"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balances fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBalancesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/quote/swap": {
      "post": {
        "tags": ["Swap"],
        "summary": "Get quote",
        "description": "This endpoint allows you to get quote for swaps.",
        "operationId": "getSwapQuote",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SwapQuoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Swap quote fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SwapQuoteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/quote/offramp": {
      "post": {
        "tags": ["Offramp"],
        "summary": "Get quote",
        "description": "This endpoint allows you to get quote for offramps.",
        "operationId": "getOfframpQuote",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfframpQuoteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Offramp quote fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfframpQuoteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/offramp": {
      "post": {
        "tags": ["Offramp"],
        "summary": "Execute offramp",
        "description": "This endpoint allows you to execute an offramp.",
        "operationId": "executeOfframp",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OfframpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Offramp initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfframpResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rate/offramp": {
      "get": {
        "tags": ["Offramp"],
        "summary": "Get rate",
        "description": "This endpoint allows you get offramp rate for a currency.",
        "operationId": "getOfframpRate",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "currency",
            "in": "query",
            "required": true,
            "description": "The currency code to get the offramp rate for",
            "schema": {
              "type": "string",
              "enum": ["NGN"],
              "example": "NGN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offramp rate fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfframpRateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/status/offramp": {
      "get": {
        "tags": ["Offramp"],
        "summary": "Get status",
        "description": "This endpoint allows you to get the status of an offramp.",
        "operationId": "getOfframpStatus",
        "security": [{"ApiKeyAuth": []}],
        "parameters": [
          {
            "name": "wallet_id",
            "in": "query",
            "required": true,
            "description": "The wallet ID to get offramp status for",
            "schema": {
              "type": "string",
              "example": "68bc290df51feea8c53f5275"
            }
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "description": "The reference of the offramp transaction",
            "schema": {
              "type": "string",
              "example": "rk7fimzmx3r5uvsjwpdx70uz4tjhmeoc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Offramp status fetched successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OfframpStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/lookup": {
      "post": {
        "tags": ["Miscellaneous"],
        "summary": "Lookup account",
        "description": "This endpoint allows you to lookup and verify bank account.",
        "operationId": "lookupAccount",
        "security": [{"ApiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LookupAccountRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bank account lookup successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupAccountResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-service-key"
      }
    },
    "schemas": {
      "CreateWalletRequest": {
        "oneOf": [
          {
            "type": "object",
            "title": "Basic",
            "description": "Basic wallet without any automation, you can make manual operations like transfers, swaps and offrams, balance checks etc. via API calls.",
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the wallet",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              }
            }
          },
          {
            "type": "object",
            "title": "Offramp",
            "description": "Offramp wallet automatically converts incoming crypto deposits to a local currency specified during beneficiary creation, and based on the current exchange rate on Bread. You can set only one beneficiary for a wallet.",
            "required": ["beneficiary_id", "offramp"],
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the wallet",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              },
              "offramp": {
                "type": "boolean",
                "enum": [true],
                "description": "Whether to automatically offramp incoming deposits. Must be **true**.",
                "example": true
              },
              "beneficiary_id": {
                "type": "string",
                "description": "The beneficiary to receive offramp payouts.",
                "example": "68bf2eba196a18d7bd166184"
              }
            }
          },
          {
            "type": "object",
            "title": "Sweep",
            "description": "Sweep wallet automatically transfers incoming crypto deposits to your internal settlement wallet. You can always transfer from the settlement wallet to any external wallet of choice via the transfer API endpoint or dashboard.",
            "required": ["sweep"],
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the wallet",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              },
              "sweep": {
                "type": "boolean",
                "enum": [true],
                "description": "Whether to automatically sweep incoming deposits. Must be **true**.",
                "example": true
              }
            }
          },
          {
            "type": "object",
            "title": "Swap",
            "description": "Swap wallet automatically converts incoming crypto deposits to a specific crypto asset. The asset and blockchain to always swap to can be configured via the asset configuration API endpoint or your dashboard.",
            "required": ["swap"],
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the wallet",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              },
              "swap": {
                "type": "boolean",
                "enum": [true],
                "description": "Whether to automatically swap incoming deposits. Must be **true**.",
                "example": true
              }
            }
          },
          {
            "type": "object",
            "title": "Earn",
            "description": "Earn wallet automatically deposits the balances into a yield-earning from our yeild providers which earns yeilds daily. These deposited funds can earn as high as 10% APY and are not locked, meaning you can withdraw them anytime.",
            "required": ["earn"],
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the wallet",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              },
              "earn": {
                "type": "boolean",
                "enum": [true],
                "description": "Whether to automatically deposit and earn yeild on balance. Must be **true**.",
                "example": true
              }
            }
          }
        ]
      },
      "CreateWalletResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Wallet created successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "example": "lt3o4tgb21uay4gye5mgp109fvvkp4"
              },
              "wallet_id": {
                "type": "string",
                "example": "68bf04ab0752968e34dbfc81"
              },
              "address": {
                "type": "object",
                "properties": {
                  "evm": {
                    "type": "string",
                    "example": "0x05A0e60459DBeea04fcd8a9354bb201ebc88B676"
                  },
                  "svm": {
                    "type": "string",
                    "example": "EyueD1zfc5yjjy81umZSCjfSc1KLDmhpQMwrGUvKbsKu"
                  }
                }
              }
            }
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Wallets fetched successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "wallets": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Wallet"
                }
              },
              "total": {
                "type": "integer",
                "example": 1
              },
              "page": {
                "type": "integer",
                "example": 1
              },
              "limit": {
                "type": "integer",
                "example": 10
              }
            }
          }
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "68bc290df51feea8c53f5275"
          },
          "reference": {
            "type": "string",
            "example": "rmb9y5fxuuc7dbb5nsoj0lezd25uls"
          },
          "is_active": {
            "type": "boolean",
            "example": true
          },
          "address": {
            "type": "object",
            "properties": {
              "evm": {
                "type": "string",
                "example": "0xf66Dd142c6F15431835f402b0B8a6093C86D7EC2"
              },
              "svm": {
                "type": "string",
                "example": "F5t8SUAPd7Ebjk6WZvGZbfS2z15RJvZ6LgXZhccwQS93"
              }
            }
          },
          "sweep": {
            "type": "boolean",
            "example": false
          },
          "swap": {
            "type": "boolean",
            "example": false
          },
          "offramp": {
            "type": "boolean",
            "example": true
          },
          "earn": {
            "type": "boolean",
            "example": false
          }
        }
      },
      "TransferRequest": {
        "type": "object",
        "required": ["wallet_id", "amount", "receiver", "asset"],
        "properties": {
          "wallet_id": {
            "type": "string",
            "description": "The wallet ID to transfer from",
            "example": "68bb7d8399900e253084e6f9"
          },
          "amount": {
            "type": "number",
            "description": "Amount to transfer. \n\nUse **-1** to transfer all available balance.",
            "example": 100
          },
          "receiver": {
            "type": "string",
            "description": "The recipient address",
            "example": "0x4ad21FA456Bb297f505B2718ba87ad63D8a95E6B"
          },
          "asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to transfer",
            "example": "bsc:usdt"
          }
        }
      },
      "TransferResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Transfer initiated successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T20:42:10.316Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string",
                "description": "Transaction hash on the blockchain",
                "example": "0x8e935237667da1a673ea84cdaf1750ef9dddb125e075d20657f38b5223674da8"
              },
              "link": {
                "type": "string",
                "description": "Link to view the transaction on a blockchain explorer",
                "example": "https://blockscan.com/tx/0x8e935237667da1a673ea84cdaf1750ef9dddb125e075d20657f38b5223674da8"
              }
            }
          }
        }
      },
      "AutomateRequest": {
        "type": "object",
        "required": ["wallet_id"],
        "properties": {
          "wallet_id": {
            "type": "string",
            "description": "The wallet ID to set automation for",
            "example": "68bc290df51feea8c53f5275"
          },
          "sweep": {
            "type": "boolean",
            "description": "Whether to enable automatic sweep",
            "example": false
          },
          "swap": {
            "type": "boolean",
            "description": "Whether to enable automatic swap",
            "example": false
          },
          "offramp": {
            "type": "boolean",
            "description": "Whether to enable automatic offramp",
            "example": true
          },
          "earn": {
            "type": "boolean",
            "description": "Whether to enable automatic earn",
            "example": false
          },
          "beneficiary_id": {
            "type": "string",
            "description": "The beneficiary ID for offramp automation. Required when **offramp** is `true`.",
            "example": "68bf2eba196a18d7bd166184"
          }
        }
      },
      "AutomateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Automation set successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-10T00:52:59.708Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "sweep": {
                "type": "boolean",
                "example": false
              },
              "swap": {
                "type": "boolean",
                "example": false
              },
              "offramp": {
                "type": "boolean",
                "example": true
              },
              "earn": {
                "type": "boolean",
                "example": false
              },
              "beneficiary_id": {
                "type": "string",
                "example": "68bf2eba196a18d7bd166184"
              }
            }
          }
        }
      },
      "CreateIdentityRequest": {
        "type": "object",
        "required": ["type", "name", "details"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["BVN", "NIN", "Link"],
            "description": "Type of identity verification",
            "example": "BVN"
          },
          "name": {
            "type": "string",
            "description": "Full name of the identity holder",
            "example": "John Doe"
          },
          "details": {
            "type": "object",
            "description": "Identity details based on type",
            "oneOf": [
              {
                "type": "object",
                "required": ["bvn", "dob"],
                "title": "BVN", 
                "properties": {
                  "bvn": {
                    "type": "string",
                    "description": "Bank Verification Number",
                    "example": "1234567890"
                  },
                  "dob": {
                    "type": "string",
                    "description": "Date of birth of the identity holder",
                    "example": "01-05-1990"
                  }
                }
              },
              {
                "type": "object",
                "required": ["nin", "dob"],
                "title": "NIN",
                "properties": {
                  "nin": {
                    "type": "string",
                    "description": "National Identification Number",
                    "example": "1234567890"
                  },
                  "dob": {
                    "type": "string",
                    "description": "Date of birth of the identity holder",
                    "example": "01-05-1990"
                  }
                }
              },
              {
                "type": "object",
                "required": ["email", "country"],
                "title": "Link",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "country": {
                    "type": "string",
                    "description": "User's country",
                    "example": "NG"
                  }
                }
              }
            ]
          }
        }
      },
      "CreateIdentityResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Identity created successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T19:26:31.532Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "68bf2de7196a18d7bd165ffb"
              },
              "link": {
                "type": "string",
                "nullable": true,
                "description": "Link URL returned when type is 'link'",
                "example": null
              }
            }
          }
        }
      },
      "GetWalletResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Wallet fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T20:37:46.152Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "68bc290df51feea8c53f5275"
              },
              "reference": {
                "type": "string",
                "example": "rmb9y5fxuuc7dbb5nsoj0lezd25uls"
              },
              "is_active": {
                "type": "boolean",
                "example": true
              },
              "address": {
                "type": "object",
                "properties": {
                  "evm": {
                    "type": "string",
                    "example": "0xf66Dd142c6F15431835f402b0B8a6093C86D7EC2"
                  },
                  "svm": {
                    "type": "string",
                    "example": "F5t8SUAPd7Ebjk6WZvGZbfS2z15RJvZ6LgXZhccwQS93"
                  }
                }
              },
              "sweep": {
                "type": "boolean",
                "example": false
              },
              "swap": {
                "type": "boolean",
                "example": false
              },
              "offramp": {
                "type": "boolean",
                "example": true
              },
              "earn": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "GetIdentityResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Identity fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T20:18:48.483Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "is_active": {
                "type": "boolean",
                "example": true
              },
              "id": {
                "type": "string",
                "example": "68bf2de7196a18d7bd165ffb"
              },
              "type": {
                "type": "string",
                "enum": ["bvn", "nin", "link"],
                "example": "bvn"
              },
              "details": {
                "type": "object",
                "description": "Identity details based on type",
                "example": {
                  "bvn": "22284621397"
                }
              }
            }
          }
        }
      },
      "CreateBeneficiaryRequest": {
        "type": "object",
        "required": ["currency", "identity_id", "details"],
        "properties": {
          "currency": {
            "type": "string",
            "enum": ["NGN"],
            "description": "The currency code for the beneficiary",
            "example": "ngn"
          },
          "identity_id": {
            "type": "string",
            "description": "The identity ID associated with this beneficiary",
            "example": "68bf2de7196a18d7bd165ffb"
          },
          "details": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/NigeriaDetails"
              },
              {
                "$ref": "#/components/schemas/CrossBorderDetails"
              }
            ],
            "description": "Banking details based country"
          }
        }
      },
      "NigeriaDetails": {
        "type": "object",
        "title": "Nigerian Bank Account",
        "required": ["bank_code", "account_number"],
        "properties": {
          "bank_code": {
            "type": "string",
            "description": "Nigerian bank code",
            "example": "100004"
          },
          "account_number": {
            "type": "string",
            "description": "Account number",
            "example": "1234567890"
          }
        },
        "additionalProperties": false
      },
      "CrossBorderDetails": {
        "type": "object",
        "title": "Other Bank Account",
        "properties": {
          "bank_address": {
            "$ref": "#/components/schemas/BankAddress"
          },
          "bank_name": {
            "type": "string",
            "description": "Name of the bank",
            "example": "Chase Bank"
          },
          "account_name": {
            "type": "string",
            "description": "Account holder's name",
            "example": "John Doe"
          },
          "account_number": {
            "type": "string",
            "description": "Account number",
            "example": "1234567890"
          },
          "routing_number": {
            "type": "string",
            "description": "Routing number (USA Only)"
          },
          "transit_number": {
            "type": "string",
            "description": "Transit number (Canada Only)"
          },
          "ifsc_code": {
            "type": "string",
            "description": "IFSC code (India Only)"
          },
          "sort_code": {
            "type": "string",
            "description": "Sort code (UK Only)"
          },
          "bsb_number": {
            "type": "string",
            "description": "BSB number (Australia Only)"
          },
          "ncc_number": {
            "type": "string",
            "description": "NCC number"
          },
          "clabe_number": {
            "type": "string",
            "description": "CLABE number (Mexico Only)"
          },
          "branch_code": {
            "type": "string",
            "description": "Branch code"
          },
          "cnaps_code": {
            "type": "string",
            "description": "CNAPS code (China Only)"
          },
          "clearing_code": {
            "type": "string",
            "description": "Clearing code (Hong Kong Only)"
          },
          "pix_code": {
            "type": "string",
            "description": "PIX code (Brazil Only)"
          },
          "iban": {
            "type": "string",
            "description": "IBAN (Europe Only)"
          },
          "swift_code": {
            "type": "string",
            "description": "SWIFT/BIC (Europe Only)"
          }
        },
        "additionalProperties": false
      },
      "BankAddress": {
        "type": "object",
        "required": ["house_no", "street", "city", "state", "postal_code", "country"],
        "properties": {
          "house_no": {
            "type": "number",
            "description": "House number",
            "example": 123
          },
          "street": {
            "type": "string",
            "description": "Street name",
            "example": "Main Street"
          },
          "city": {
            "type": "string",
            "description": "City name",
            "example": "Lagos"
          },
          "state": {
            "type": "string",
            "description": "State or province",
            "example": "Lagos State"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal or ZIP code",
            "example": "100001"
          },
          "country": {
            "type": "string",
            "description": "Country code",
            "example": "NG"
          }
        },
        "additionalProperties": false
      },
      "CreateBeneficiaryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 201
          },
          "message": {
            "type": "string",
            "example": "Beneficiary created successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T20:40:35.538Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "68bf2eba196a18d7bd166184"
              }
            }
          }
        }
      },
      "GetBeneficiaryResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Beneficiary fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T20:51:58.112Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "68bf2eba196a18d7bd166184"
              },
              "is_active": {
                "type": "boolean",
                "example": true
              },
              "currency": {
                "type": "string",
                "example": "ngn"
              },
              "details": {
                "type": "object",
                "description": "Bank account details based on country"
              }
            }
          }
        }
      },
      "GetBeneficiariesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Beneficiaries fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-08T21:16:13.410Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "beneficiaries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "68bf2eba196a18d7bd166184"
                    },
                    "is_active": {
                      "type": "boolean",
                      "example": true
                    },
                    "currency": {
                      "type": "string",
                      "example": "ngn"
                    },
                    "details": {
                      "type": "object",
                      "description": "Bank account details based on country"
                    }
                  }
                }
              },
              "total": {
                "type": "integer",
                "example": 1
              },
              "page": {
                "type": "integer",
                "example": 1
              },
              "limit": {
                "type": "integer",
                "example": 10
              }
            }
          }
        }
      },
      "GetBanksResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Banks fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T17:13:01.632Z"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Bank name",
                  "example": "Access Bank"
                },
                "code": {
                  "type": "string",
                  "description": "Bank code",
                  "example": "000014"
                },
                "icon": {
                  "type": "string",
                  "description": "Bank icon",
                  "example": "https://api.bread.africa/assets/banks/access-bank.png"
                }
              }
            }
          }
        }
      },
      "GetAssetsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Assets fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T17:28:20.783Z"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Asset"
            }
          }
        }
      },
      "Asset": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the asset",
            "example": "ethereum:usdc"
          },
          "name": {
            "type": "string",
            "description": "Full name of the asset",
            "example": "USD Coin"
          },
          "code": {
            "type": "string",
            "description": "Asset code/symbol",
            "example": "USDC"
          },
          "address": {
            "type": "string",
            "description": "Contract address of the asset on the blockchain",
            "example": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
          },
          "blockchain": {
            "type": "string",
            "description": "Blockchain network where the asset exists",
            "example": "Ethereum"
          }
        }
      },
      "GetNotificationsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Notifications fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T17:30:28.463Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "notifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Notification"
                }
              },
              "total": {
                "type": "integer",
                "example": 33
              },
              "page": {
                "type": "integer",
                "example": 1
              },
              "limit": {
                "type": "integer",
                "example": 10
              }
            }
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the notification",
            "example": "68bdc82c196a18d7bd14d45a"
          },
          "asset": {
            "type": "string",
            "description": "Unique identifier for the asset",
            "example": "ethereum:usdc"
          },
          "reference": {
            "type": "string",
            "description": "Reference identifier for the transaction",
            "example": "mwGrRUSV4QsGDu36Q6cdEaxy8y0mwGrR"
          },
          "wallet": {
            "type": "string",
            "description": "Wallet ID associated with the notification",
            "example": "68bb7d8399900e253084e6f9"
          },
          "hash": {
            "type": "string",
            "description": "Transaction hash on the blockchain",
            "example": "56JBvQoxj2fh4aFfDHKuqFMryq4KPjm2oywTu4NnuxtvX7fhGTdweoRx1VfAdxXNQLKe6dN3upAD8ysjt91TkezE"
          },
          "sender": {
            "type": "string",
            "description": "Sender address",
            "example": "F5t8SUAPd7Ebjk6WZvGZbfS2z15RJvZ6LgXZhccwQS93"
          },
          "direction": {
            "type": "string",
            "enum": ["incoming", "outgoing"],
            "description": "Direction of the transaction",
            "example": "incoming"
          },
          "receiver": {
            "type": "string",
            "description": "Receiver address",
            "example": "DvzLwM5v3gak3gSuMieiYCzN2zzYdMqHS9EXEb78V5jZ"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": 0.5
          },
          "fee": {
            "type": "number",
            "description": "Transaction fee",
            "example": 0
          },
          "token": {
            "type": "string",
            "description": "Token contract address",
            "example": "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
          },
          "blockchain": {
            "type": "integer",
            "description": "Blockchain identifier",
            "example": 10000
          },
          "status": {
            "type": "string",
            "enum": ["completed", "pending", "failed"],
            "description": "Transaction status",
            "example": "completed"
          },
          "type": {
            "type": "string",
            "enum": ["deposit", "transfer", "offramp", "swap"],
            "description": "Type of transaction",
            "example": "deposit"
          }
        }
      },
      "GetBalanceResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Balance fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T17:36:53.285Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the asset",
                "example": "solana:usdc"
              },
              "name": {
                "type": "string",
                "description": "Full name of the asset",
                "example": "USD Coin"
              },
              "code": {
                "type": "string",
                "description": "Asset code/symbol",
                "example": "USDC"
              },
              "blockchain": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Blockchain identifier",
                    "example": 10000
                  },
                  "name": {
                    "type": "string",
                    "description": "Blockchain name",
                    "example": "Solana"
                  }
                }
              },
              "balance": {
                "type": "number",
                "description": "Total balance amount",
                "example": 0
              },
              "available": {
                "type": "number",
                "description": "Available balance amount",
                "example": 0
              },
              "debt": {
                "type": "number",
                "description": "Debt amount",
                "example": 0
              }
            }
          }
        }
      },
      "GetBalancesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Balances fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T17:42:01.623Z"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier for the asset",
                  "example": "bsc:usdt"
                },
                "name": {
                  "type": "string",
                  "description": "Full name of the asset",
                  "example": "Tether"
                },
                "code": {
                  "type": "string",
                  "description": "Asset code/symbol",
                  "example": "USDT"
                },
                "blockchain": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Blockchain identifier",
                      "example": 56
                    },
                    "name": {
                      "type": "string",
                      "description": "Blockchain name",
                      "example": "BNB Chain"
                    }
                  }
                },
                "balance": {
                  "type": "number",
                  "description": "Total balance amount",
                  "example": 4.5e-17
                },
                "available": {
                  "type": "number",
                  "description": "Available balance amount",
                  "example": 4.5e-17
                },
                "debt": {
                  "type": "number",
                  "description": "Debt amount",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "SwapQuoteRequest": {
        "type": "object",
        "required": ["wallet_id", "receiver", "from_asset", "to_asset"],
        "properties": {
          "wallet_id": {
            "type": "string",
            "description": "The wallet ID to swap from",
            "example": "68bb7d8399900e253084e6f9"
          },
          "from_amount": {
            "type": "number",
            "description": "Amount to swap. Use **-1** to swap all available balance.\n\nUse this for **EXACT INPUT** swaps.",
            "example": -1
          },
          "to_amount": {
            "type": "number",
            "description": "Amount of the `to_asset` you want to receive.\n\nUse this for **EXACT OUTPUT** swaps.",
            "example": 100
          },
          "receiver": {
            "type": "string",
            "description": "The recipient address for the swapped assets",
            "example": "0x4ad21FA456Bb297f505B2718ba87ad63D8a95E6B"
          },
          "from_asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to swap from",
            "example": "solana:usdc"
          },
          "to_asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to swap to",
            "example": "base:usdc"
          }
        }
      },
      "SwapExecuteRequest": {
        "type": "object",
        "required": ["wallet_id", "receiver", "from_asset", "to_asset"],
        "properties": {
          "wallet_id": {
            "type": "string",
            "description": "The wallet ID to swap from",
            "example": "68bb7d8399900e253084e6f9"
          },
          "from_amount": {
            "type": "number",
            "description": "Amount to swap. Use **-1** to swap all available balance.\n\nUse this for **EXACT INPUT** swaps.",
            "example": -1
          },
          "to_amount": {
            "type": "number",
            "description": "Amount of the `to_asset` you want to receive.\n\nUse this for **EXACT OUTPUT** swaps.",
            "example": 100
          },
          "receiver": {
            "type": "string",
            "description": "The recipient address for the swapped assets",
            "example": "0x4ad21FA456Bb297f505B2718ba87ad63D8a95E6B"
          },
          "from_asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to swap from",
            "example": "solana:usdc"
          },
          "to_asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to swap to",
            "example": "base:usdc"
          }
        }
      },
      "SwapQuoteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Swap quote fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T21:09:46.572Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "input_amount": {
                "type": "number",
                "description": "The actual amount that will be swapped from the source asset",
                "example": 4
              },
              "output_amount": {
                "type": "number",
                "description": "The expected amount to receive in the target asset",
                "example": 3.997592
              },
              "min_output_amount": {
                "type": "number",
                "description": "The minimum amount guaranteed to receive (accounting for slippage)",
                "example": 3.993592
              },
              "price_impact": {
                "type": "number",
                "description": "The price impact of the swap as a percentage",
                "example": 0.06
              },
              "duration": {
                "type": "integer",
                "description": "Estimated duration of the swap in seconds",
                "example": 22
              },
              "rate": {
                "type": "number",
                "description": "Exchange rate between the assets",
                "example": 0.9993
              },
              "input_amount_usd": {
                "type": "number",
                "description": "USD value of the input amount",
                "example": 3.9996
              },
              "output_amount_usd": {
                "type": "number",
                "description": "USD value of the output amount",
                "example": 3.9972
              }
            }
          }
        }
      },
      "SwapExecuteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Swap executed successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T20:42:10.316Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string",
                "description": "Transaction hash on the blockchain",
                "example": "0x8e935237667da1a673ea84cdaf1750ef9dddb125e075d20657f38b5223674da8"
              },
              "link": {
                "type": "string",
                "description": "Link to view the transaction on a blockchain explorer",
                "example": "https://blockscan.com/tx/0x8e935237667da1a673ea84cdaf1750ef9dddb125e075d20657f38b5223674da8"
              }
            }
          }
        }
      },
      "OfframpQuoteRequest": {
        "type": "object",
        "required": ["amount", "currency", "asset"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "The amount of asset to offramp",
            "example": 1000
          },
          "currency": {
            "type": "string",
            "enum": ["NGN"],
            "description": "The fiat currency to offramp to",
            "example": "NGN"
          },
          "asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The crypto asset to offramp from",
            "example": "base:usdc"
          }
        }
      },
      "OnrampQuoteRequest": {
        "type": "object",
        "required": ["wallet_id", "amount", "currency", "asset"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "The fiat amount to to deposit for onramp",
            "example": 10000
          },
          "currency": {
            "type": "string",
            "enum": ["NGN"],
            "description": "The fiat currency to deposit for onramp",
            "example": "NGN"
          },
          "asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The crypto asset to receive after onramp",
            "example": "base:usdc"
          }
        }
      },
      "OfframpQuoteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Offramp quote fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T22:58:05.691Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of quote",
                "example": "offramp"
              },
              "fee": {
                "type": "number",
                "description": "Fee amount for the offramp",
                "example": 0
              },
              "expiry": {
                "type": "string",
                "format": "date-time",
                "description": "Quote expiry timestamp",
                "example": "2025-09-09T23:00:05.691Z"
              },
              "currency": {
                "type": "string",
                "description": "Target fiat currency code",
                "example": "NGN"
              },
              "rate": {
                "type": "number",
                "description": "Exchange rate from crypto to fiat",
                "example": 1515
              },
              "input_amount": {
                "type": "number",
                "description": "Input amount in fiat currency",
                "example": 1000
              },
              "output_amount": {
                "type": "number",
                "description": "Output amount in fiat currency",
                "example": 1515000
              }
            }
          }
        }
      },
      "OnrampQuoteResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Onramp quote fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T23:00:02.682Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of quote",
                "example": "onramp"
              },
              "fee": {
                "type": "number",
                "description": "Fee amount for the onramp",
                "example": 0
              },
              "expiry": {
                "type": "string",
                "format": "date-time",
                "description": "Quote expiry timestamp",
                "example": "2025-09-09T23:02:02.682Z"
              },
              "currency": {
                "type": "string",
                "description": "Source fiat currency code",
                "example": "NGN"
              },
              "rate": {
                "type": "number",
                "description": "Exchange rate from fiat to crypto",
                "example": 1521
              },
              "input_amount": {
                "type": "number",
                "description": "Input amount in fiat currency",
                "example": 10000
              },
              "output_amount": {
                "type": "number",
                "description": "Output amount in crypto asset",
                "example": 6.574621959237344
              }
            }
          }
        }
      },
      "OfframpRequest": {
        "type": "object",
        "required": ["wallet_id", "amount", "beneficiary_id", "asset"],
        "properties": {
          "wallet_id": {
            "type": "string",
            "description": "The wallet ID to offramp from",
            "example": "68bb7d8399900e253084e6f9"
          },
          "amount": {
            "type": "number",
            "description": "Amount to offramp",
            "example": 100
          },
          "beneficiary_id": {
            "type": "string",
            "description": "The beneficiary ID to receive the offramp payout",
            "example": "68bf2eba196a18d7bd166184"
          },
          "asset": {
            "type": "string",
            "enum": ["ethereum:usdc", "base:usdc", "arbitrum:usdc", "solana:usdc", "bsc:usdc", "polygon:usdc", "optimism:usdc", "avalanche:usdc", "ethereum:usdt", "arbitrum:usdt", "solana:usdt", "polygon:usdt", "bsc:usdt", "optimism:usdt", "avalanche:usdt", "base:cngn"],
            "description": "The asset to offramp",
            "example": "base:usdc"
          }
        }
      },
      "OfframpResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Offramp initiated successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-09T23:34:20.478Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "reference": {
                "type": "string",
                "description": "Unique reference identifier for the offramp transaction",
                "example": "n4ri27oeopl9m5tuzbpe03cmvq4d1j80"
              }
            }
          }
        }
      },
      "LookupAccountRequest": {
        "type": "object",
        "required": ["bank_code", "currency", "account_number"],
        "properties": {
          "bank_code": {
            "type": "string",
            "description": "Bank code for account lookup",
            "example": "100004"
          },
          "currency": {
            "type": "string",
            "enum": ["NGN"],
            "description": "Currency code for the account",
            "example": "ngn"
          },
          "account_number": {
            "type": "string",
            "description": "Bank account number to lookup",
            "example": "1234567890"
          }
        }
      },
      "LookupAccountResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Bank account lookup successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-10T01:20:03.033Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "bank_code": {
                "type": "string",
                "description": "Bank code",
                "example": "100004"
              },
              "bank_name": {
                "type": "string",
                "description": "Name of the bank",
                "example": "Opay"
              },
              "account_number": {
                "type": "string",
                "description": "Account number",
                "example": "1234567890"
              },
              "account_name": {
                "type": "string",
                "description": "Account holder's name",
                "example": "John Doe"
              }
            }
          }
        }
      },
      "OfframpRateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Offramp rate fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-10T01:34:18.649Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "number",
                "description": "The current offramp rate for the specified currency",
                "example": 1515
              }
            }
          }
        }
      },
      "OnrampRateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Onramp rate fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-10T01:35:36.935Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "number",
                "description": "The current onramp rate for the specified currency",
                "example": 1521
              }
            }
          }
        }
      },
      "OfframpStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "integer",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "Offramp status fetched successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-09-11T21:29:42.416Z"
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique identifier for the offramp transaction",
                "example": "68c1b920196a18d7bd1998d6"
              },
              "reference": {
                "type": "string",
                "description": "Reference identifier for the offramp transaction",
                "example": "rk7fimzmx3r5uvsjwpdx70uz4tjhmeoc"
              },
              "address": {
                "type": "string",
                "description": "Address of the offramp wallet",
                "example": "0x0000000000000000000000000000000000000000"
              },
              "blockchain": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Blockchain identifier",
                    "example": 8453
                  },
                  "icon": {
                    "type": "string",
                    "description": "Blockchain icon URL",
                    "example": "https://i.imgur.com/zvJz8OR.png"
                  },
                  "name": {
                    "type": "string",
                    "description": "Blockchain name",
                    "example": "Base"
                  },
                  "code": {
                    "type": "string",
                    "description": "Blockchain code",
                    "example": "Base"
                  }
                }
              },
              "token": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Token identifier",
                    "example": "base:usdc"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Token icon URL",
                    "example": "https://i.imgur.com/ilNGZVh.png"
                  },
                  "name": {
                    "type": "string",
                    "description": "Token name",
                    "example": "USD Coin"
                  },
                  "code": {
                    "type": "string",
                    "description": "Token code",
                    "example": "USDC"
                  }
                }
              },
              "currency": {
                "type": "object",
                "properties": {
                  "icon": {
                    "type": "string",
                    "description": "Currency icon URL",
                    "example": "https://i.imgur.com/RhBMnVC.png"
                  },
                  "name": {
                    "type": "string",
                    "description": "Currency name",
                    "example": "Nigerian Naira"
                  },
                  "code": {
                    "type": "string",
                    "description": "Currency code",
                    "example": "NGN"
                  }
                }
              },
              "recipient": {
                "type": "object",
                "properties": {
                  "account_name": {
                    "type": "string",
                    "description": "Account holder's name",
                    "example": "John Doe"
                  },
                  "account_number": {
                    "type": "string",
                    "description": "Account number",
                    "example": "0123456789"
                  },
                  "bank_name": {
                    "type": "string",
                    "description": "Bank name",
                    "example": "Opay"
                  }
                }
              },
              "from_amount": {
                "type": "number",
                "description": "Amount being offramped from crypto",
                "example": 0.997598
              },
              "to_amount": {
                "type": "string",
                "description": "Amount being received in fiat currency",
                "example": "738"
              },
              "rate": {
                "type": "number",
                "description": "Exchange rate used for the offramp",
                "example": 1522
              },
              "fee": {
                "type": "number",
                "description": "Fee charged for the offramp",
                "example": 0.996600402
              },
              "time_to_arrive": {
                "type": "integer",
                "description": "Estimated time for funds to arrive (in seconds)",
                "example": 60
              },
              "status": {
                "type": "string",
                "enum": ["completed", "pending", "failed", "processing"],
                "description": "Status of the offramp transaction",
                "example": "completed"
              }
            }
          }
        }
      }
    }
  }
}